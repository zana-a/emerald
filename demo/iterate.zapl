# Iterate Example
# ===============
#
# This example shows how to iterate through a list of items using the loop
# control pattern.
#
# Although it is clunky, it uses mutable state of a counter to record where the
# program is at a given point.
#

let items: List<Any> = [1, 2, 3, "String"]
let mut counter: Int = 0

loop do
  Enum::size(items) == counter => do
    IO::puts(
      Enum::at(
        items,
        counter
      )
    )
    break
  end

  _ => do
    IO::puts(
      Enum::at(
        items,
        counter
      )
    )
    counter = counter + 1
    break
  end
end


